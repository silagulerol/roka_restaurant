<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Roka Restaurant - Amazing & Delicious Food</title>

   <!--
    favicon 
   -->
    <link rel="shortcut icon" href="/favicon.svg" type="image/svg+xml" >

    <!--
    google font link 
   -->
   <link rel="preconnect" href="https://fonts.googleapis.com">
   <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
   <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&family=Forum&display=swap" rel="stylesheet">

   <!--
    custom css link
   -->
   <link rel="stylesheet" href="/public/stylesheets/style.css">
  <style>
      html, body {
      height: 100%;
      margin: 0;
      overflow: hidden;
    }

  </style>
  
    
  <style>
    #cart {
  margin: 40px auto;
  padding: 30px;
  width: 50%;
  background-color: var(--gold-crayola);
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  overflow-y: auto;
  max-height: 85vh;
  font-family: 'DM Sans', sans-serif;
  transition: box-shadow 0.3s ease;
}

#cart:hover {
  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.25);
}

#cart h2 {
  text-align: center;
  color: #222;
  font-size: 2rem;
  margin-bottom: 25px;
}

.order-items-section {
  background-color: #fffdf3;
  border-radius: 12px;
  padding: 20px;
  box-shadow: inset 0 0 10px rgba(0,0,0,0.05);
  opacity: 1 !important;
  transition: all 0.3s ease;
}

.order-items-section h2 {
  font-size: 1.2rem;
  margin-bottom: 15px;
  color: #444;
}

#orderItems {
  width: 100%;
  border-collapse: collapse;
  margin-top: 15px;
}

#orderItems th,
#orderItems td {
  padding: 12px;
  text-align: center;
  border-bottom: 1px solid #ddd;
  font-size: 1.5rem;
  color: #333;
}

#orderItems thead tr {
  background-color: #f6d365;
}

#orderItems th {
  color: #000;
  font-weight: 600;
}

#submitOrder,
#clearOrders {
  margin-top: 20px;
  padding: 6px 14px;
  font-size: 1.5rem;
  background-color: #e67e22;
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-right: 10px;
}

#submitOrder:hover,
#clearOrders:hover {
  background-color: #cf5800;
}

  </style>
  </style>
    <!--
    preload images
   -->
    <link rel="preload" as="image" href="/public/images/hero-slider-1.jpeg">
    <link rel="preload" as="image" href="/public/images/hero-slider-2.png">
    <link rel="preload" as="image" href="/public/images/hero-slider-3.png">
    
   

  
</head>

<body class="reservation_body" id="body">
  <%- include('top_bar') %>
  

  <main>

<!-- order.html -->
    <div class="ordering-page"  style="overflow-y: hidden; display: flex; height: 100vh;  background-image: url('/public/images/special-dish-banner.jpg');background-size: cover; background-position: center; ">
        
      <div class="left-side" id="menuItems" style =" padding: 20px; overflow-y: auto;  width: 100%; display: flex; flex-wrap: wrap; gap: 20px;" >
            <!-- Menu items will be dynamically inserted here -->
           
        <section class="order-section" style="padding: 0;margin: 0%; margin-top: 20px;width:100%; background-color: transparent; color: white; ">
          <br>    
          <h2 class="headline-1 text-center">WAITING ORDERS</h2>
            <table id="Orders" style="width: 80%; margin-top: 20px; background-color: rgba(0, 0, 0, 0.6);">
              <thead>
                <tr style="background-color: var(--gold-crayola); color: var(--black);">
                  <th style="padding: 12px; width:10%;  border: 1px solid white;">Collection Time</th>
                  <th style="padding: 12px;   border: 1px solid white;">Collection Hour</th>
                  <th style="padding: 12px;   border: 1px solid white;">Price</th>
                  <th style="padding: 12px;   border: 1px solid white;">First Name</th>
                  <th style="padding: 12px;   border: 1px solid white;">Last Name</th>
                  <th style="padding: 12px; width:18%; border: 1px solid white;">Items</th>
                  <th  style="padding: 12px;  border: 1px solid white;">Accept or Delete</th>
                </tr>
              </thead>
              <tbody id="ordersBody" style="border: 3px solid white;">

              </tbody>
            </table>
        </section>
        </div>

        
        <div class="right-side" id="cart" style ="margin: 20px; margin-block-start: 50px; padding: 20px;overflow-y: overlay;  width: 40%; background-color:var(--gold-crayola); " >
          <h2>Accepted Order</h2>
          <section class="order-items-section" style="padding: 0;margin: 0%;width:100%; background-color: var(--gold-crayola); color: white ;opacity: 0.7;">
            <h2 class="headline-1 text-center"> </h2>

            <table id="orderItems" style="width: 100%; margin-top: 20px; padding-left:0;  border-collapse: collapse;">
                <thead> 
                  <tr style="background-color: var(--gold-crayola); color: var(--black);">
                    <th class="span title-2" style="padding: 4px;">First Name</th>
                    <th class="span title-2" style="padding: 4px;">Last Name</th>
                    <th class="span title-2" style="padding: 4px;">Prices</th>
                  </tr>
                </thead>
                <tbody id="orderItemsBody">

                </tbody>
                
              </table>
              
              
              <button id="submitOrder" style="display:none; padding: 2px; background-color: var(--gold-crayola); color: white;"" onclick="submitOrder()">Submit Order</button>
              <button id="clearOrders" style="display:none; padding: 2px; background-color: var(--gold-crayola); color: white;" onclick="clearOrders()">Clear All Orders</button>
         </section>
        </div>
        
        </div>

      
    </div>

   
  </main>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  
    <script>
    async function loadOrders() {
      const token = localStorage.getItem("accessToken");
      if (!token) {
        return;
      }
      try {
        // getting items from DB
         const res = await axios.get("/api/orders", {
          headers: {
            Authorization: `Bearer ${token}`
          }
        });
        const orders = res.data.data;
        
        // clear order table
        const tbody = document.getElementById("ordersBody");
        tbody.innerHTML = "";

        // filing the row
        orders.forEach((i) => {
          const tr = document.createElement("tr");
          const dateObj = new Date(i.collectionTime);
          const formattedDate = `${String(dateObj.getDate()).padStart(2, '0')}-${String(dateObj.getMonth() + 1).padStart(2, '0')}-${dateObj.getFullYear()}`;
  
          const formattedHour = i.collectionHour?.slice(0, 5) || "--:--";

          tr.innerHTML = `
            <td style="padding: 12px;border-bottom: 1px solid white;">${formattedDate}</td>
            <td style="padding: 12px;border-bottom: 1px solid white;">${i.price}</td>
            <td style="padding: 12px;border-bottom: 1px solid white;">${formattedHour}</td>
            <td style="padding: 12px;border-bottom: 1px solid white;">${i.created_by?.first_name || 'N/A'} </td>
            <td style="padding: 12px;border-bottom: 1px solid white;">${i.created_by?.last_name || 'N/A'}  </td>
            <td style="padding: 12px;border-bottom: 1px solid white;"> 
              <ol>
                ${i.items.map(item => `<li>${item.name}</li>`).join('')}
              </ol>
            </td>
            <td style="padding: 12px;border-bottom: 1px solid white;">
              <button  class="btn btn-secondary" style="color: white; height: 50%;" onclick="deleteOrder(this, '${i._id}')">Delete</button>
              <br>
              <button class="btn btn-secondary" style="color: white; height: 50%;" onclick="accept(this, '${i._id}', '${i.price}', '${i.created_by?.first_name}','${i.created_by?.last_name}')">Accept</button>
            </td>
          `;
          
          tbody.appendChild(tr);
        });

        
      } catch (err) {
        console.error("Error loading reservations:", err);
      }
    }

   

    async function accept(buttonElement, orderId, price, first_name, last_name){
        try {
            const token = localStorage.getItem("accessToken");
            if (!token) {
              return;
            }
            const tbody = document.getElementById("orderItemsBody");
            const tr = document.createElement("tr");

            tr.innerHTML = `
            <td style="padding: 2px; background-color: var(--gold-crayola); color: var(--black);">${first_name}</td>
            <td style="padding: 2px; background-color: var(--gold-crayola); color: var(--black);">${last_name}</td>
            <td style="padding: 2px; background-color: var(--gold-crayola); color: var(--black);">${price}</td>
            <td style="padding: 2px;">
                  <button  style="padding: 2px; background-color: var(--gold-crayola); color: var(--black);" onclick="deleteRow(this)">Delete</button>
            </td>
           `     
            tbody.appendChild(tr);

            document.getElementById("clearOrders").style.display = "inline-block";

            const payload={
                _id: orderId,
                price:price,
                first_name: first_name,
                last_name: last_name,
                isActive: true
            }

            const res = await axios.post("/api/orders/update", payload, {
              headers: {
                Authorization: `Bearer ${token}`
              }
            });
        
            const updated= res.data.code;
            console.log(updated);
            deleteRow(buttonElement);

      } catch(err){
        console.log(err);
        console.error("Delete failed");
      }
    }
    
    async function deleteOrder(buttonElement, orderId){
      try {
        const token = localStorage.getItem("accessToken");
            if (!token) {
              return;
            }
        const res =await axios.post('/api/orders/delete', {_id: orderId}, {
              headers: {
                Authorization: `Bearer ${token}`
              }
        });

        const row= buttonElement.closest("tr");
        if (row) {
        row.remove();
        }

        

      } catch(err){
        console.error("Error deleting orders:", err);
      }
    }

    async function deleteRow(buttonElement){
      const row= buttonElement.closest("tr");
      if (row) {
         row.remove();
      }
    }

    async function clearOrders(){
      const tbody = document.getElementById("orderItemsBody");
      tbody.innerHTML = "";
      document.getElementById("clearOrders").style.display = "none";
    }

 
    window.addEventListener("DOMContentLoaded", loadOrders);
    </script>
  <%- include('script') %>
</body>
</html>